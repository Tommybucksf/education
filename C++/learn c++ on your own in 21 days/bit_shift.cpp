/*
В контексті кібербезпеки, вбудованих систем та написання операційної системи (ОС), бітовий зсув може
 мати кілька застосувань:
Маскування та фільтрація бітів
У кібербезпеці, особливо при роботі з вбудованими системами, може знадобитися маскування або фільтрація
 певних бітів для виконання операцій, таких як дозвіл чи заборона певних доступів. Бітовий зсув може 
 використовуватися для встановлення чи скидання бітових флагів у реєстрах апаратного забезпечення або 
 конфігураційних параметрах.
Оптимізація пам'яті в вбудованих системах:
У вбудованих системах, де обмежена кількість доступної пам'яті, можна використовувати бітовий зсув для
 економії місця при представленні деяких даних або конфігурацій.
Оптимізація роботи з бітами при написанні операційних систем:
При розробці операційних систем, особливо для вбудованих систем, де важлива продуктивність та 
оптимізація ресурсів, бітовий зсув може використовуватися для реалізації ефективних алгоритмів роботи 
з бітами.
Шифрування та обробка бітів у кібербезпеці:
У кібербезпеці, особливо при розробці шифрувальних алгоритмів чи методів обробки бітів, бітовий зсув
може використовуватися для створення та реалізації певних шифрувальних конструкцій.
*/
#include <iostream>

int main() {
    int Input = 16;  // Наприклад, вхідне значення

    // Обчислення половини та чверті вхідного значення
    int Half = Input >> 1;
    int Quarter = Input >> 2;

    // Виведення результатів
    std::cout << "Input: " << Input << std::endl;
    std::cout << "Half: " << Half << std::endl;
    std::cout << "Quarter: " << Quarter << std::endl;

    return 0;
}
